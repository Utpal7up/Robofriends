{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","Searchfield","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_Scroll","components_ErrorBoundry","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","createRoot","render","src_containers_App"],"mappings":"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","file":"static/js/main.393acdd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// export default function Card(props) {\r\nexport default function Card({ id, name, email }) {      //this is called destructuring\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      {/* <img alt='Robots' src={`https://robohash.org/${props.id}?100Ã—100`} /> */}\r\n      <img alt=\"Robots\" src={`https://robohash.org/${id}/100*100`} />\r\n      <div>\r\n        {/* <h2>{props.name}</h2> */}\r\n        {/* <p>{props.email}</p>  */}\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default function CardList({ robots }) {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchBox({Searchfield, onSearchChange}) {\r\n  return (\r\n    <div className='pa2' >\r\n      <input className='pa3 ba b--green bg-lightest-blue' \r\n        type=\"search\" \r\n        placeholder='search robots'\r\n        onChange={onSearchChange}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '4px solid black', height: '700px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h2>Oooooops! Thst is not good</h2> \r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n//IF NOT EXPORTED AS DEFAULT, WE HAVE TO USE { }\r\n// import { robots } from \"./robots\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }))\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n    // console.log(event.target.value);\r\n  };\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n    // console.log(filteredRobots);\r\n\r\n    if (robots.length === 0) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f2\">RoboFriends</h1>\r\n          <SearchBox onSearchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport App from \"./containers/App\";\nimport './index.css';\nimport{ createRoot }from \"react-dom/client\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//USED BEFORE REACT VERSION 18 \n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n//CHANGES IN REACT v18\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}